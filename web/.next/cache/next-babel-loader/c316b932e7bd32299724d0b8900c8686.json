{"ast":null,"code":"var _jsxFileName = \"/Users/brianna.workman/Documents/private-git/react-node-graphQL/web/src/pages/forgot-password.tsx\";\nvar __jsx = React.createElement;\nimport { Flex, Button } from \"@chakra-ui/core\";\nimport { Formik, Form } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport React from 'react';\nimport { InputField } from \"../components/InputField\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport login from \"./login\";\n\nconst ForgotPassword = ({}) => {\n  return __jsx(Wrapper, {\n    variant: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      usernameOrEmail: \"\",\n      password: \"\"\n    },\n    onSubmit: async (values, {\n      setErrors\n    }) => {\n      var _response$data, _response$data2;\n\n      const response = await login(values);\n\n      if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.login.errors) {\n        setErrors(toErrorMap(response.data.login.errors));\n      } else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.login.user) {\n        // worked\n        router.push(\"/\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, __jsx(InputField, {\n    name: \"email\",\n    placeholder: \"email\",\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }), __jsx(Flex, {\n    align: 'center',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    mt: 4,\n    type: \"submit\",\n    isLoading: isSubmitting,\n    variantColor: \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  }, \"forgot password\")))));\n};\n\nexport default withUrqlClient(createUrqlClient)(ForgotPassword);","map":{"version":3,"sources":["/Users/brianna.workman/Documents/private-git/react-node-graphQL/web/src/pages/forgot-password.tsx"],"names":["Flex","Button","Formik","Form","withUrqlClient","React","InputField","Wrapper","createUrqlClient","toErrorMap","login","ForgotPassword","usernameOrEmail","password","values","setErrors","response","data","errors","user","router","push","isSubmitting"],"mappings":";;AAAA,SAAcA,IAAd,EAAoBC,MAApB,QAAwC,iBAAxC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,cAA4B,GAAG,CAAC,EAAD,KAAS;AAC1C,SACI,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AACI,IAAA,aAAa,EAAE;AAAEC,MAAAA,eAAe,EAAE,EAAnB;AAAuBC,MAAAA,QAAQ,EAAE;AAAjC,KADnB;AAEI,IAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,MAAAA;AAAF,KAAf,KAAiC;AAAA;;AACvC,YAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACI,MAAD,CAA5B;;AACA,4BAAIE,QAAQ,CAACC,IAAb,mDAAI,eAAeP,KAAf,CAAqBQ,MAAzB,EAAiC;AAC7BH,QAAAA,SAAS,CAACN,UAAU,CAACO,QAAQ,CAACC,IAAT,CAAcP,KAAd,CAAoBQ,MAArB,CAAX,CAAT;AACH,OAFD,MAEO,uBAAIF,QAAQ,CAACC,IAAb,oDAAI,gBAAeP,KAAf,CAAqBS,IAAzB,EAA+B;AAClC;AACAC,QAAAA,MAAM,CAACC,IAAP,CAAY,GAAZ;AACH;AACJ,KAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYK,CAAC;AAAEC,IAAAA;AAAF,GAAD,KACG,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,WAAW,EAAC,OAFhB;AAGI,IAAA,KAAK,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AACI,IAAA,EAAE,EAAE,CADR;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,SAAS,EAAEA,YAHf;AAII,IAAA,YAAY,EAAC,MAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CANJ,CAbR,CADJ,CADJ;AAoCH,CArCD;;AAuCA,eAAelB,cAAc,CAACI,gBAAD,CAAd,CAAiCG,cAAjC,CAAf","sourcesContent":["import { Box, Flex, Button, Link } from \"@chakra-ui/core\";\nimport { Formik, Form } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport React from 'react'\nimport { InputField } from \"../components/InputField\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport login from \"./login\";\n\nconst ForgotPassword: React.FC<{}> = ({ }) => {\n    return (\n        <Wrapper variant=\"small\">\n            <Formik\n                initialValues={{ usernameOrEmail: \"\", password: \"\" }}\n                onSubmit={async (values, { setErrors }) => {\n                    const response = await login(values);\n                    if (response.data?.login.errors) {\n                        setErrors(toErrorMap(response.data.login.errors));\n                    } else if (response.data?.login.user) {\n                        // worked\n                        router.push(\"/\");\n                    }\n                }}\n            >\n                {({ isSubmitting }) => (\n                    <Form>\n                        <InputField\n                            name=\"email\"\n                            placeholder=\"email\"\n                            label=\"Email\"\n                        />\n                        <Flex align={'center'}>\n                            <Button\n                                mt={4}\n                                type=\"submit\"\n                                isLoading={isSubmitting}\n                                variantColor=\"teal\"\n                            >\n                                forgot password\n            </Button>\n                        </Flex>\n                    </Form>\n                )}\n            </Formik>\n        </Wrapper>\n    );\n}\n\nexport default withUrqlClient(createUrqlClient)(ForgotPassword)"]},"metadata":{},"sourceType":"module"}