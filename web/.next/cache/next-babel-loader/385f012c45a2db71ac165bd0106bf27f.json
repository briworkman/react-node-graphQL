{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/brianna.workman/Documents/private-git/react-node-graphQL/web/src/pages/forgot-password.tsx\";\n\nvar __jsx = React.createElement;\nimport { Flex, Button } from \"@chakra-ui/core\";\nimport { Formik, Form } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport React from 'react';\nimport { InputField } from \"../components/InputField\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport login from \"./login\";\n\nvar ForgotPassword = function ForgotPassword(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  return __jsx(Wrapper, {\n    variant: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      usernameOrEmail: \"\",\n      password: \"\"\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n        var _response$data, _response$data2;\n\n        var setErrors, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setErrors = _ref2.setErrors;\n                _context.next = 3;\n                return login(values);\n\n              case 3:\n                response = _context.sent;\n\n                if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.login.errors) {\n                  setErrors(toErrorMap(response.data.login.errors));\n                } else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.login.user) {\n                  // worked\n                  router.push(\"/\");\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, function (_ref4) {\n    var isSubmitting = _ref4.isSubmitting;\n    return __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, __jsx(InputField, {\n      name: \"email\",\n      placeholder: \"email\",\n      label: \"Email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }\n    }), __jsx(Flex, {\n      align: 'center',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }, __jsx(Button, {\n      mt: 4,\n      type: \"submit\",\n      isLoading: isSubmitting,\n      variantColor: \"teal\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }\n    }, \"forgot password\")));\n  }));\n};\n\n_c = ForgotPassword;\nexport default withUrqlClient(createUrqlClient)(ForgotPassword);\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["/Users/brianna.workman/Documents/private-git/react-node-graphQL/web/src/pages/forgot-password.tsx"],"names":["Flex","Button","Formik","Form","withUrqlClient","React","InputField","Wrapper","createUrqlClient","toErrorMap","login","ForgotPassword","usernameOrEmail","password","values","setErrors","response","data","errors","user","router","push","isSubmitting"],"mappings":";;;;;;;;AAAA,SAAcA,IAAd,EAAoBC,MAApB,QAAwC,iBAAxC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,IAAMC,cAA4B,GAAG,SAA/BA,cAA+B,OAAS;AAAA;;AAC1C,SACI,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AACI,IAAA,aAAa,EAAE;AAAEC,MAAAA,eAAe,EAAE,EAAnB;AAAuBC,MAAAA,QAAQ,EAAE;AAAjC,KADnB;AAEI,IAAA,QAAQ;AAAA,2EAAE,iBAAOC,MAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBC,gBAAAA,SAAjB,SAAiBA,SAAjB;AAAA;AAAA,uBACiBL,KAAK,CAACI,MAAD,CADtB;;AAAA;AACAE,gBAAAA,QADA;;AAEN,sCAAIA,QAAQ,CAACC,IAAb,mDAAI,eAAeP,KAAf,CAAqBQ,MAAzB,EAAiC;AAC7BH,kBAAAA,SAAS,CAACN,UAAU,CAACO,QAAQ,CAACC,IAAT,CAAcP,KAAd,CAAoBQ,MAArB,CAAX,CAAT;AACH,iBAFD,MAEO,uBAAIF,QAAQ,CAACC,IAAb,oDAAI,gBAAeP,KAAf,CAAqBS,IAAzB,EAA+B;AAClC;AACAC,kBAAAA,MAAM,CAACC,IAAP,CAAY,GAAZ;AACH;;AAPK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;AAAA,OAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYK;AAAA,QAAGC,YAAH,SAAGA,YAAH;AAAA,WACG,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,UAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,WAAW,EAAC,OAFhB;AAGI,MAAA,KAAK,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,MAAD;AACI,MAAA,EAAE,EAAE,CADR;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,SAAS,EAAEA,YAHf;AAII,MAAA,YAAY,EAAC,MAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CANJ,CADH;AAAA,GAZL,CADJ,CADJ;AAoCH,CArCD;;KAAMX,c;AAuCN,eAAeP,cAAc,CAACI,gBAAD,CAAd,CAAiCG,cAAjC,CAAf","sourcesContent":["import { Box, Flex, Button, Link } from \"@chakra-ui/core\";\nimport { Formik, Form } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport React from 'react'\nimport { InputField } from \"../components/InputField\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport login from \"./login\";\n\nconst ForgotPassword: React.FC<{}> = ({ }) => {\n    return (\n        <Wrapper variant=\"small\">\n            <Formik\n                initialValues={{ usernameOrEmail: \"\", password: \"\" }}\n                onSubmit={async (values, { setErrors }) => {\n                    const response = await login(values);\n                    if (response.data?.login.errors) {\n                        setErrors(toErrorMap(response.data.login.errors));\n                    } else if (response.data?.login.user) {\n                        // worked\n                        router.push(\"/\");\n                    }\n                }}\n            >\n                {({ isSubmitting }) => (\n                    <Form>\n                        <InputField\n                            name=\"email\"\n                            placeholder=\"email\"\n                            label=\"Email\"\n                        />\n                        <Flex align={'center'}>\n                            <Button\n                                mt={4}\n                                type=\"submit\"\n                                isLoading={isSubmitting}\n                                variantColor=\"teal\"\n                            >\n                                forgot password\n            </Button>\n                        </Flex>\n                    </Form>\n                )}\n            </Formik>\n        </Wrapper>\n    );\n}\n\nexport default withUrqlClient(createUrqlClient)(ForgotPassword)"]},"metadata":{},"sourceType":"module"}