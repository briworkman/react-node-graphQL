{"ast":null,"code":"var _jsxFileName = \"/Users/brianna.workman/Documents/private-git/react-node-graphQL/web/src/pages/forgot-password.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Button, Flex } from \"@chakra-ui/core\";\nimport { Form, Formik } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport React, { useState } from 'react';\nimport { InputField } from \"../components/InputField\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { useForgotPasswordMutation } from \"../generated/graphql\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\n\nconst ForgotPassword = ({}) => {\n  const {\n    0: isComplete,\n    1: setIsComplete\n  } = useState(false);\n  const [, forgotPassword] = useForgotPasswordMutation();\n  return __jsx(Wrapper, {\n    variant: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      email: \"\"\n    },\n    onSubmit: async values => {\n      await forgotPassword(values);\n      setIsComplete(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, ({\n    isSubmitting\n  }) => isComplete ? __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 53\n    }\n  }, \"if an account with that email exists, we sent you an email\") : __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, __jsx(InputField, {\n    name: \"email\",\n    placeholder: \"email\",\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }), __jsx(Flex, {\n    align: 'center',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    mt: 4,\n    type: \"submit\",\n    isLoading: isSubmitting,\n    variantColor: \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 29\n    }\n  }, \"forgot password\")))));\n};\n\nexport default withUrqlClient(createUrqlClient)(ForgotPassword);","map":{"version":3,"sources":["/Users/brianna.workman/Documents/private-git/react-node-graphQL/web/src/pages/forgot-password.tsx"],"names":["Box","Button","Flex","Form","Formik","withUrqlClient","React","useState","InputField","Wrapper","useForgotPasswordMutation","createUrqlClient","ForgotPassword","isComplete","setIsComplete","forgotPassword","email","values","isSubmitting"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,QAAkC,iBAAlC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,yBAAT,QAA0C,sBAA1C;AACA,SAASC,gBAAT,QAAiC,2BAAjC;;AAEA,MAAMC,cAA4B,GAAG,CAAC,EAAD,KAAS;AAC1C,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BP,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,GAAGQ,cAAH,IAAqBL,yBAAyB,EAApD;AAEA,SACI,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AACI,IAAA,aAAa,EAAE;AAAEM,MAAAA,KAAK,EAAE;AAAT,KADnB;AAEI,IAAA,QAAQ,EAAE,MAAOC,MAAP,IAAkB;AACxB,YAAMF,cAAc,CAACE,MAAD,CAApB;AACAH,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOK,CAAC;AAAEI,IAAAA;AAAF,GAAD,KAAsBL,UAAU,GAAG,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAAH,GAC7B,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,WAAW,EAAC,OAFhB;AAGI,IAAA,KAAK,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AACI,IAAA,EAAE,EAAE,CADR;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,SAAS,EAAEK,YAHf;AAII,IAAA,YAAY,EAAC,MAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CANJ,CARR,CADJ,CADJ;AA+BH,CAnCD;;AAqCA,eAAeb,cAAc,CAACM,gBAAD,CAAd,CAAiCC,cAAjC,CAAf","sourcesContent":["import { Box, Button, Flex } from \"@chakra-ui/core\";\nimport { Form, Formik } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport React, { useState } from 'react';\nimport { InputField } from \"../components/InputField\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { useForgotPasswordMutation } from \"../generated/graphql\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\n\nconst ForgotPassword: React.FC<{}> = ({ }) => {\n    const [isComplete, setIsComplete] = useState(false)\n    const [, forgotPassword] = useForgotPasswordMutation();\n\n    return (\n        <Wrapper variant=\"small\">\n            <Formik\n                initialValues={{ email: \"\" }}\n                onSubmit={async (values) => {\n                    await forgotPassword(values);\n                    setIsComplete(true);\n                }}\n            >\n                {({ isSubmitting }) => isComplete ? <Box>if an account with that email exists, we sent you an email</Box> : (\n                    <Form>\n                        <InputField\n                            name=\"email\"\n                            placeholder=\"email\"\n                            label=\"Email\"\n                        />\n                        <Flex align={'center'}>\n                            <Button\n                                mt={4}\n                                type=\"submit\"\n                                isLoading={isSubmitting}\n                                variantColor=\"teal\"\n                            >\n                                forgot password\n            </Button>\n                        </Flex>\n                    </Form>\n                )}\n            </Formik>\n        </Wrapper>\n    );\n}\n\nexport default withUrqlClient(createUrqlClient)(ForgotPassword)"]},"metadata":{},"sourceType":"module"}