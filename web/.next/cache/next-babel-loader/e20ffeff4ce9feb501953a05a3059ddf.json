{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/brianna.workman/Documents/private-git/react-node-graphQL/web/src/components/NavBar.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Box, Link, Flex, Button } from \"@chakra-ui/core\";\nimport NextLink from \"next/link\";\nimport { useLogoutMutation, useMeQuery } from \"../generated/graphql\";\nimport { isServer } from \"../utils/isServer\";\nexport var NavBar = function NavBar(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useLogoutMutation = useLogoutMutation(),\n      _useLogoutMutation2 = _slicedToArray(_useLogoutMutation, 2),\n      logoutFetching = _useLogoutMutation2[0].fetching,\n      logout = _useLogoutMutation2[1];\n\n  var _useMeQuery = useMeQuery({\n    pause: isServer()\n  }),\n      _useMeQuery2 = _slicedToArray(_useMeQuery, 1),\n      _useMeQuery2$ = _useMeQuery2[0],\n      data = _useMeQuery2$.data,\n      fetching = _useMeQuery2$.fetching;\n\n  var body = null; // data is loading\n\n  if (fetching) {// user not logged in\n  } else if (!(data === null || data === void 0 ? void 0 : data.me)) {\n    body = __jsx(React.Fragment, null, __jsx(NextLink, {\n      href: \"/login\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      mr: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, \"login\")), __jsx(NextLink, {\n      href: \"/register\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, \"register\"))); // user is logged in\n  } else {\n    body = __jsx(Flex, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, __jsx(Box, {\n      mr: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, data.me.username), __jsx(Button, {\n      onClick: function onClick() {\n        return logout();\n      },\n      isLoading: logoutFetching,\n      variant: \"link\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, \"logout\"));\n  }\n\n  return __jsx(Flex, {\n    bg: \"#319795\",\n    p: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    ml: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, body));\n};\n\n_s(NavBar, \"bu7Mo57UkJD6Z7YYu+ueXRjOJFY=\", false, function () {\n  return [useLogoutMutation, useMeQuery];\n});\n\n_c = NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/brianna.workman/Documents/private-git/react-node-graphQL/web/src/components/NavBar.tsx"],"names":["React","Box","Link","Flex","Button","NextLink","useLogoutMutation","useMeQuery","isServer","NavBar","logoutFetching","fetching","logout","pause","data","body","me","username"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,MAA1B,QAAwC,iBAAxC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,iBAAT,EAA4BC,UAA5B,QAA8C,sBAA9C;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAIA,OAAO,IAAMC,MAA6B,GAAG,SAAhCA,MAAgC,OAAS;AAAA;;AAAA;;AAAA,2BACLH,iBAAiB,EADZ;AAAA;AAAA,MACjCI,cADiC,0BAC3CC,QAD2C;AAAA,MACfC,MADe;;AAAA,oBAEvBL,UAAU,CAAC;AACtCM,IAAAA,KAAK,EAAEL,QAAQ;AADuB,GAAD,CAFa;AAAA;AAAA;AAAA,MAE3CM,IAF2C,iBAE3CA,IAF2C;AAAA,MAErCH,QAFqC,iBAErCA,QAFqC;;AAMpD,MAAII,IAAI,GAAG,IAAX,CANoD,CAQpD;;AACA,MAAIJ,QAAJ,EAAc,CACZ;AACD,GAFD,MAEO,IAAI,EAACG,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEE,EAAP,CAAJ,EAAe;AACpBD,IAAAA,IAAI,GACF,4BACE,MAAC,QAAD;AAAU,MAAA,IAAI,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIE,MAAC,QAAD;AAAU,MAAA,IAAI,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAJF,CADF,CADoB,CAWpB;AACD,GAZM,MAYA;AACLA,IAAAA,IAAI,GACF,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaD,IAAI,CAACE,EAAL,CAAQC,QAArB,CADF,EAEE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAML,MAAM,EAAZ;AAAA,OAAjB;AAAiC,MAAA,SAAS,EAAEF,cAA5C;AAA4D,MAAA,OAAO,EAAC,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAMD;;AAED,SACE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAmB,IAAA,CAAC,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBK,IAAlB,CADF,CADF;AAKD,CArCM;;GAAMN,M;UACoCH,iB,EAClBC,U;;;KAFlBE,M","sourcesContent":["import React from \"react\";\nimport { Box, Link, Flex, Button } from \"@chakra-ui/core\";\nimport NextLink from \"next/link\";\nimport { useLogoutMutation, useMeQuery } from \"../generated/graphql\";\nimport { isServer } from \"../utils/isServer\";\n\ninterface NavBarProps { }\n\nexport const NavBar: React.FC<NavBarProps> = ({ }) => {\n  const [{ fetching: logoutFetching }, logout] = useLogoutMutation();\n  const [{ data, fetching }] = useMeQuery({\n    pause: isServer(),\n  });\n\n  let body = null;\n\n  // data is loading\n  if (fetching) {\n    // user not logged in\n  } else if (!data?.me) {\n    body = (\n      <>\n        <NextLink href=\"/login\">\n          <Link mr={2}>login</Link>\n        </NextLink>\n        <NextLink href=\"/register\">\n          <Link>register</Link>\n        </NextLink>\n      </>\n    );\n    // user is logged in\n  } else {\n    body = (\n      <Flex>\n        <Box mr={2}>{data.me.username}</Box>\n        <Button onClick={() => logout()} isLoading={logoutFetching} variant=\"link\">logout</Button>\n      </Flex>\n    );\n  }\n\n  return (\n    <Flex bg=\"#319795\" p={4}>\n      <Box ml={\"auto\"}>{body}</Box>\n    </Flex>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}