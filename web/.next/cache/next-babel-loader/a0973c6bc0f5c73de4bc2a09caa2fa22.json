{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/brianna.workman/Documents/private-git/react-node-graphQL/web/src/pages/forgot-password.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Box, Button, Flex } from \"@chakra-ui/core\";\nimport { Form, Formik } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport React, { useState } from 'react';\nimport { InputField } from \"../components/InputField\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { useForgotPasswordMutation } from \"../generated/graphql\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\n\nvar ForgotPassword = function ForgotPassword(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState(false),\n      isComplete = _useState[0],\n      setIsComplete = _useState[1];\n\n  var _useForgotPasswordMut = useForgotPasswordMutation(),\n      _useForgotPasswordMut2 = _slicedToArray(_useForgotPasswordMut, 2),\n      forgotPassword = _useForgotPasswordMut2[1];\n\n  return __jsx(Wrapper, {\n    variant: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      email: \"\"\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return forgotPassword(values);\n\n              case 2:\n                setIsComplete(true);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, function (_ref3) {\n    var isSubmitting = _ref3.isSubmitting;\n    return isComplete ? __jsx(Box, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 53\n      }\n    }, \"if an account with that email exists, we sent you an email\") : __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, __jsx(InputField, {\n      name: \"email\",\n      placeholder: \"email\",\n      label: \"Email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    }), __jsx(Flex, {\n      align: 'center',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }, __jsx(Button, {\n      mt: 4,\n      type: \"submit\",\n      isLoading: isSubmitting,\n      variantColor: \"teal\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }\n    }, \"forgot password\")));\n  }));\n};\n\n_s(ForgotPassword, \"LYMwHIImDqwgvM7hKkZH6lDFe7E=\", false, function () {\n  return [useForgotPasswordMutation];\n});\n\n_c = ForgotPassword;\nexport default withUrqlClient(createUrqlClient)(ForgotPassword);\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["/Users/brianna.workman/Documents/private-git/react-node-graphQL/web/src/pages/forgot-password.tsx"],"names":["Box","Button","Flex","Form","Formik","withUrqlClient","React","useState","InputField","Wrapper","useForgotPasswordMutation","createUrqlClient","ForgotPassword","isComplete","setIsComplete","forgotPassword","email","values","isSubmitting"],"mappings":";;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,QAAkC,iBAAlC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,yBAAT,QAA0C,sBAA1C;AACA,SAASC,gBAAT,QAAiC,2BAAjC;;AAEA,IAAMC,cAA4B,GAAG,SAA/BA,cAA+B,OAAS;AAAA;;AAAA;;AAAA,kBACNL,QAAQ,CAAC,KAAD,CADF;AAAA,MACnCM,UADmC;AAAA,MACvBC,aADuB;;AAAA,8BAEfJ,yBAAyB,EAFV;AAAA;AAAA,MAEjCK,cAFiC;;AAI1C,SACI,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AACI,IAAA,aAAa,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADnB;AAEI,IAAA,QAAQ;AAAA,2EAAE,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACAF,cAAc,CAACE,MAAD,CADd;;AAAA;AAENH,gBAAAA,aAAa,CAAC,IAAD,CAAb;;AAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;AAAA,OAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOK;AAAA,QAAGI,YAAH,SAAGA,YAAH;AAAA,WAAsBL,UAAU,GAAG,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAAH,GAC7B,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,UAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,WAAW,EAAC,OAFhB;AAGI,MAAA,KAAK,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,MAAD;AACI,MAAA,EAAE,EAAE,CADR;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,SAAS,EAAEK,YAHf;AAII,MAAA,YAAY,EAAC,MAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CANJ,CADH;AAAA,GAPL,CADJ,CADJ;AA+BH,CAnCD;;GAAMN,c;UAEyBF,yB;;;KAFzBE,c;AAqCN,eAAeP,cAAc,CAACM,gBAAD,CAAd,CAAiCC,cAAjC,CAAf","sourcesContent":["import { Box, Button, Flex } from \"@chakra-ui/core\";\nimport { Form, Formik } from \"formik\";\nimport { withUrqlClient } from \"next-urql\";\nimport React, { useState } from 'react';\nimport { InputField } from \"../components/InputField\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { useForgotPasswordMutation } from \"../generated/graphql\";\nimport { createUrqlClient } from \"../utils/createUrqlClient\";\n\nconst ForgotPassword: React.FC<{}> = ({ }) => {\n    const [isComplete, setIsComplete] = useState(false)\n    const [, forgotPassword] = useForgotPasswordMutation();\n\n    return (\n        <Wrapper variant=\"small\">\n            <Formik\n                initialValues={{ email: \"\" }}\n                onSubmit={async (values) => {\n                    await forgotPassword(values);\n                    setIsComplete(true);\n                }}\n            >\n                {({ isSubmitting }) => isComplete ? <Box>if an account with that email exists, we sent you an email</Box> : (\n                    <Form>\n                        <InputField\n                            name=\"email\"\n                            placeholder=\"email\"\n                            label=\"Email\"\n                        />\n                        <Flex align={'center'}>\n                            <Button\n                                mt={4}\n                                type=\"submit\"\n                                isLoading={isSubmitting}\n                                variantColor=\"teal\"\n                            >\n                                forgot password\n            </Button>\n                        </Flex>\n                    </Form>\n                )}\n            </Formik>\n        </Wrapper>\n    );\n}\n\nexport default withUrqlClient(createUrqlClient)(ForgotPassword)"]},"metadata":{},"sourceType":"module"}