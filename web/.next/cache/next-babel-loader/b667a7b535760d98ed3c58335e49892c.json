{"ast":null,"code":"var _jsxFileName = \"/Users/brianna.workman/Documents/private-git/react-node-graphQL/web/src/pages/change-password/[token].tsx\";\nvar __jsx = React.createElement;\nimport { Button } from \"@chakra-ui/core\";\nimport { Formik, Form } from \"formik\";\nimport React from \"react\";\nimport { InputField } from \"../../components/InputField\";\nimport { Wrapper } from \"../../components/Wrapper\";\n\nconst ChangePassword = ({\n  token\n}) => {\n  return __jsx(Wrapper, {\n    variant: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      newPassword: ''\n    },\n    onSubmit: async (values, {\n      setErrors\n    }) => {//   const response = await login(values);\n      //   if (response.data?.login.errors) {\n      //     setErrors(toErrorMap(response.data.login.errors));\n      //   } else if (response.data?.login.user) {\n      //     // worked\n      //     router.push(\"/\");\n      //   }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, __jsx(InputField, {\n    name: \"newPassword\",\n    placeholder: \"new password\",\n    label: \"New Password\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }), __jsx(Button, {\n    mt: 4,\n    type: \"submit\",\n    isLoading: isSubmitting,\n    variantColor: \"teal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, \"change password\"))));\n};\n\nChangePassword.getInitialProps = ({\n  query\n}) => {\n  return {\n    token: query.token\n  };\n};\n\nexport default ChangePassword;","map":{"version":3,"sources":["/Users/brianna.workman/Documents/private-git/react-node-graphQL/web/src/pages/change-password/[token].tsx"],"names":["Button","Formik","Form","React","InputField","Wrapper","ChangePassword","token","newPassword","values","setErrors","isSubmitting","getInitialProps","query"],"mappings":";;AAAA,SAAcA,MAAd,QAA4B,iBAA5B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,OAAT,QAAwB,0BAAxB;;AAIA,MAAMC,cAA2C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC/D,SACI,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AACI,IAAA,aAAa,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KADnB;AAEI,IAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,MAAAA;AAAF,KAAf,KAAiC,CACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYK,CAAC;AAAEC,IAAAA;AAAF,GAAD,KACG,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AACI,IAAA,IAAI,EAAC,aADT;AAEI,IAAA,WAAW,EAAC,cAFhB;AAGI,IAAA,KAAK,EAAC,cAHV;AAII,IAAA,IAAI,EAAC,UAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI,MAAC,MAAD;AACI,IAAA,EAAE,EAAE,CADR;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,SAAS,EAAEA,YAHf;AAII,IAAA,YAAY,EAAC,MAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPJ,CAbR,CADJ,CADJ;AAmCH,CApCD;;AAsCAL,cAAc,CAACM,eAAf,GAAiC,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC5C,SAAO;AACHN,IAAAA,KAAK,EAAEM,KAAK,CAACN;AADV,GAAP;AAGH,CAJD;;AAMA,eAAeD,cAAf","sourcesContent":["import { Box, Button } from \"@chakra-ui/core\";\nimport { Formik, Form } from \"formik\";\nimport { NextPage } from \"next\";\nimport React from \"react\";\nimport { InputField } from \"../../components/InputField\";\nimport { Wrapper } from \"../../components/Wrapper\";\nimport { toErrorMap } from \"../../utils/toErrorMap\";\nimport login from \"../login\";\n\nconst ChangePassword: NextPage<{ token: string }> = ({ token }) => {\n    return (\n        <Wrapper variant=\"small\">\n            <Formik\n                initialValues={{ newPassword: '' }}\n                onSubmit={async (values, { setErrors }) => {\n                    //   const response = await login(values);\n                    //   if (response.data?.login.errors) {\n                    //     setErrors(toErrorMap(response.data.login.errors));\n                    //   } else if (response.data?.login.user) {\n                    //     // worked\n                    //     router.push(\"/\");\n                    //   }\n                }}\n            >\n                {({ isSubmitting }) => (\n                    <Form>\n                        <InputField\n                            name=\"newPassword\"\n                            placeholder=\"new password\"\n                            label=\"New Password\"\n                            type='password'\n                        />\n                        <Button\n                            mt={4}\n                            type=\"submit\"\n                            isLoading={isSubmitting}\n                            variantColor=\"teal\"\n                        >\n                            change password\n                        </Button>\n                    </Form>\n                )}\n            </Formik>\n        </Wrapper>\n    );\n}\n\nChangePassword.getInitialProps = ({ query }) => {\n    return {\n        token: query.token as string\n    }\n}\n\nexport default ChangePassword"]},"metadata":{},"sourceType":"module"}