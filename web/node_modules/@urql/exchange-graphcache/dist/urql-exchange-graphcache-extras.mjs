function u(a) {
  return "string" == typeof a ? a : null;
}

function y(a, f, g) {
  var c, b, d, l, m;
  for (c = new Set, b = 0, d = f.length; b < d; b++) {
    "string" == typeof (l = a.resolve(f[b], "node")) && c.add(l);
  }
  f = f.slice();
  b = 0;
  for (d = g.length; b < d; b++) {
    "string" != typeof (m = a.resolve(l = g[b], "node")) || c.has(m) || (c.add(m), f.push(l));
  }
  return f;
}

function z(a, f) {
  var g, c, b, d;
  for (g in f) {
    if ("first" !== g && "last" !== g && "after" !== g && "before" !== g) {
      if (!(g in a)) {
        return !1;
      }
      if (typeof (c = a[g]) != typeof (b = f[g]) || "object" != typeof c ? c !== b : stringifyVariables(c) !== stringifyVariables(b)) {
        return !1;
      }
    }
  }
  for (d in a) {
    if ("first" !== d && "last" !== d && "after" !== d && "before" !== d && !(d in f)) {
      return !1;
    }
  }
  return !0;
}

function A(a, f, g) {
  var b, d, l, m, c = u(a.resolveFieldByKey(f, g));
  if (!c) {
    return null;
  }
  f = a.resolve(c, "__typename");
  g = a.resolve(c, "edges") || [];
  if ("string" != typeof f) {
    return null;
  }
  f = {
    __typename: f,
    edges: g,
    pageInfo: t
  };
  if ("string" == typeof (b = a.resolve(c, "pageInfo"))) {
    c = u(a.resolve(b, "__typename"));
    d = u(a.resolve(b, "endCursor")), l = u(a.resolve(b, "startCursor")), m = a.resolve(b, "hasNextPage");
    b = a.resolve(b, "hasPreviousPage");
    null === (c = f.pageInfo = {
      __typename: "string" == typeof c ? c : "PageInfo",
      hasNextPage: "boolean" == typeof m ? m : !!d,
      hasPreviousPage: "boolean" == typeof b ? b : !!l,
      endCursor: d,
      startCursor: l
    }).endCursor && (d = g[g.length - 1]) && (d = a.resolve(d, "cursor"), c.endCursor = u(d));
    null === c.startCursor && (g = g[0]) && (a = a.resolve(g, "cursor"), c.startCursor = u(a));
  }
  return f;
}

function relayPagination(a) {
  void 0 === a && (a = {});
  var f = a.mergeMode || "inwards";
  return function(a, c, b, d) {
    var g, m, w, q, r, p, h, n, k, e;
    g = d.fieldName;
    if (0 !== (w = (m = b.inspectFields(a = d.parentKey).filter((function(b) {
      return b.fieldName === g;
    }))).length)) {
      for (q = null, r = [], p = [], h = _extends({}, t), n = 0; n < w; n++) {
        e = (k = m[n]).fieldKey;
        null !== (k = k.arguments) && z(c, k) && (null !== (e = A(b, a, e)) && ("inwards" === f && "number" == typeof k.last && "number" == typeof k.first ? (h = e.edges.slice(0, k.first + 1), 
        k = e.edges.slice(-k.last), r = y(b, r, h), p = y(b, k, p), h = e.pageInfo) : k.after ? (r = y(b, r, e.edges), 
        h.endCursor = e.pageInfo.endCursor, h.hasNextPage = e.pageInfo.hasNextPage) : k.before ? (p = y(b, e.edges, p), 
        h.startCursor = e.pageInfo.startCursor, h.hasPreviousPage = e.pageInfo.hasPreviousPage) : ("number" == typeof k.last ? p = y(b, p, e.edges) : r = y(b, r, e.edges), 
        h = e.pageInfo), e.pageInfo.__typename !== h.__typename && (h.__typename = e.pageInfo.__typename), 
        q !== e.__typename && (q = e.__typename)));
      }
      if ("string" == typeof q) {
        if (!u(b.resolve(a, g, c))) {
          if (d.store.schema) {
            d.partial = !0;
          } else {
            return;
          }
        }
        return {
          __typename: q,
          edges: "inwards" === f ? y(b, r, p) : y(b, p, r),
          pageInfo: {
            __typename: h.__typename,
            endCursor: h.endCursor,
            startCursor: h.startCursor,
            hasNextPage: h.hasNextPage,
            hasPreviousPage: h.hasPreviousPage
          }
        };
      }
    }
  };
}

function simplePagination(a) {
  function f(b, a) {
    var d, f, w, q;
    for (d in a) {
      if (d !== g && d !== c) {
        if (!(d in b)) {
          return !1;
        }
        if (typeof (f = b[d]) != typeof (w = a[d]) || "object" != typeof f ? f !== w : stringifyVariables(f) !== stringifyVariables(w)) {
          return !1;
        }
      }
    }
    for (q in b) {
      if (q !== g && q !== c && !(q in a)) {
        return !1;
      }
    }
    return !0;
  }
  var g, c;
  void 0 === a && (a = {});
  void 0 === (g = a.offsetArgument) && (g = "skip");
  void 0 === (c = a.limitArgument) && (c = "limit");
  return function(b, a, c, m) {
    var d, q, r, p, h, n, k, e, l, v, x;
    d = m.fieldName;
    if (0 !== (r = (q = c.inspectFields(b = m.parentKey).filter((function(a) {
      return a.fieldName === d;
    }))).length)) {
      for (p = new Set, h = [], n = null, k = 0; k < r; k++) {
        l = (e = q[k]).fieldKey;
        if (null !== (e = e.arguments) && f(a, e) && (l = c.resolveFieldByKey(b, l), e = e[g], 
        null !== l && 0 !== l.length && "number" == typeof e)) {
          if (!n || e > n) {
            for (n = 0; n < l.length; n++) {
              p.has(v = l[n]) || (h.push(v), p.add(v));
            }
          } else {
            n = [];
            for (v = 0; v < l.length; v++) {
              p.has(x = l[v]) || (n.push(x), p.add(x));
            }
            h = n.concat(h);
          }
          n = e;
        }
      }
      if (c.resolve(b, d, a)) {
        return h;
      }
      if (m.store.schema) {
        return m.partial = !0, h;
      }
    }
  };
}

import { stringifyVariables } from "@urql/core";

import { _ as _extends } from "./5301ccd2.mjs";

var t = {
  __typename: "PageInfo",
  endCursor: null,
  startCursor: null,
  hasNextPage: !1,
  hasPreviousPage: !1
};

export { relayPagination, simplePagination };
//# sourceMappingURL=urql-exchange-graphcache-extras.mjs.map
