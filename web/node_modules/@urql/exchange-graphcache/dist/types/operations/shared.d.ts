import { SelectionSet } from '../ast';
import { Store } from '../store';
import { Fragments, Variables, DataField, NullArray, Data } from '../types';
export interface Context {
    store: Store;
    variables: Variables;
    fragments: Fragments;
    parentTypeName: string;
    parentKey: string;
    parentFieldKey: string;
    fieldName: string;
    partial: boolean;
    optimistic: boolean;
}
export declare const makeContext: (store: Store, variables: Variables, fragments: Fragments, typename: string, entityKey: string, optimistic?: boolean | undefined) => Context;
export declare const updateContext: (ctx: Context, typename: string, entityKey: string, fieldKey: string, fieldName: string) => void;
export declare const makeSelectionIterator: (typename: void | string, entityKey: string, select: SelectionSet, ctx: Context) => {
    next(): import("graphql").FieldNode | undefined;
};
export declare const ensureData: (x: DataField) => Data | NullArray<Data> | null;
